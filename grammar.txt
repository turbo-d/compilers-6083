expr ::= [not] arith_op expr_prime
expr_prime ::= & arith_op expr_prime |
				| arith_op expr_prime |
				null
arith_op ::= relation arith_op_prime
arith_op_prime ::= + relation arith_op_prime |
					- relation arith_op_prime |
					null
// TODO: Should relations be right-associative?
relation ::= term relation_prime
relation_prime ::= < term relation_prime |
					>= term relation prime |
					<= term relation prime |
					> term relation prime |
					== term relation prime |
					!= term relation prime |
					null
term ::= factor term_prime |
term_prime ::= * factor term_prime |
				/ factor term_prime |
				null
factor ::= identifier name_prime |
			identifier procedure_call_prime |
			- identifier
			- int_literal
			- float_literal
			int_literal
			float_literal
			string_literal
			true
			false
			( expr )
procedure_call_prime ::= ( argument_list )
name ::= identifier name_prime
name_prime ::= [ expr ] |
				null

# resync error extensions:
identifier ::= (invalid)* id (id | invalid)*
id := [a-zA-Z][a-zA-Z0-9_]*
